@model IEnumerable<ABC_Retail_ST10255912_POE.Models.Products>
@{
    ViewData["Title"] = "ABC Retail - Shop the Best Deals";
}

<div class="typing-container" style="margin-top: 120px;">
    <h1 id="dynamic-typing-text" class="typing-text"></h1>
</div>


<script>
    document.addEventListener('DOMContentLoaded', () => {
        // Customize the text content you want to type
        const textContent = "Welcome to ABC Retail!"; // Change as needed
        const typingText = document.getElementById('dynamic-typing-text');
        typingText.textContent = textContent;

        // Calculate the width of the text content in `ch` units
        const textLength = textContent.length;
        typingText.style.setProperty('--typing-width', `${textLength}ch`); // Dynamic width in `ch`
    });

</script>

<div class="hero-section">
    <div class="hero-content">
        <h1>Your Favorite Products!</h1>
        <p>Discover deals and products tailored just for you.</p>
        <a href="#deals" class="category-tile">Explore Deals</a>
    </div>
</div>

<div class="ring-button-container">
    <a href="/products" class="ring ring-1">
        <span class="ring-text font-links">Shop Now</span>
    </a>
    <div href="/products" class="ring ring-2">
        <span class="ring-text"></span>
    </div>
    <div href="/products" class="ring ring-3">
        <span class="ring-text"></span>
    </div>
    <div href="/products" class="ring ring-4">
        <span class="ring-text"></span>
    </div>
</div>

<div class="music-sheet-container" style="margin-bottom: 30px;">
    <div class="music-sheet" id="musicSheet1">
        <!-- JavaScript will insert random notes here -->
    </div>
</div>
<div class="music-sheet-container" style="margin-bottom: 150px;">
    <div class="music-sheet" id="musicSheet2">
        <!-- JavaScript will insert random notes here -->
    </div>
</div>

<div id="deals" class="carousel slide" data-bs-ride="carousel" data-bs-interval="3000" style="margin-bottom: 120px;"/>
    <div class="carousel-inner">
        @foreach (var product in Model)
        {
            <div class="carousel-item @(Model.First() == product ? "active" : "")">
                <div class="mb-3" style="max-width: 500px; max-height: 550px; margin: auto; background-color: #333; border-radius: 10px;">
                    <img src="@Url.Content("~/" + product.ImagePath)" class="card-img-top" alt="@product.ProductName" style="max-height: 300px; padding: 30px;" />
                    <div class="card-body">
                        <h5 class="card-title">@product.ProductName</h5>
                        <p class="card-text"><strong>Price:</strong> @product.FormattedPrice</p>
                        <p class="card-text"><small class="text-muted">Added recently</small></p>
                    </div>
                </div>
            </div>
        }
    </div>
    
    <!-- Carousel controls -->
    <button class="carousel-control-prev" type="button" data-bs-target="#dealsCarousel" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#dealsCarousel" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div>


<script>
    document.addEventListener('DOMContentLoaded', () => {
        const notes = ['♪', '♫', '♬', '♭', '♮', '♯'];

        // Function to populate a music sheet with random notes
        function populateMusicSheet(sheetId) {
            const musicSheet = document.getElementById(sheetId);

            if (musicSheet) {
                // Generate random notes for the specified music sheet
                for (let i = 0; i < 30; i++) { // Adjust the number for note density
                    const note = document.createElement('span');
                    note.className = 'note';
                    note.textContent = notes[Math.floor(Math.random() * notes.length)];
                    note.style.marginRight = `${Math.floor(Math.random() * 100) + 60}px`; // Space between notes
                    musicSheet.appendChild(note);
                }
            }
        }

        // Populate each music sheet separately
        populateMusicSheet('musicSheet1');
        populateMusicSheet('musicSheet2');
    });
</script>



<div class="d-flex flex-row">
    <p>*Custom cursor png created by - </p> 
    <a href="https://www.flaticon.com/authors/seyfdesigner">SeyfDesigner</a>
</div>


